#!/bin/bash

# Resolve all dependencies that the application requires to run.
# From https://github.com/github/scripts-to-rule-them-all/blob/master/script/bootstrap

# This will install jq ( https://robots.thoughtbot.com/jq-is-sed-for-json )
git clone https://github.com/Connexions/rhaptos.cnxmlutils

cd "$(dirname "$0")/.."

if [[ -f "Brewfile" ]] && [[ "$(uname -s)" = "Darwin" ]]; then
  >&2 echo "==> Updating Homebrew…"
  brew update || exit 1

  brew bundle check >/dev/null 2>&1  || {
    >&2 echo "==> Installing Homebrew dependencies…"
    brew bundle || exit 1
  }
fi

# Note: Skip rbenv for Travis because it already has ruby
if [[ ! "${CI}" = "true" ]] && [[ -f ".ruby-version" ]]; then
  if [[ -n $(which rbenv) ]]; then

    if [[ -z "$(rbenv version-name 2>/dev/null)" ]]; then
      >&2 echo "==> Installing Ruby…"
      rbenv install --skip-existing || exit 1
    fi
  else
    >&2 echo "WARNING: Skipping rbenv. Using local ruby"
  fi

  # Initialize rbenv (if installed)
  [[ -n $(which rbenv) ]] && eval "$(rbenv init -)"

  which bundle >/dev/null 2>&1  || {
    >&2 echo "==> Installing Ruby Bundler gem…"
    gem install bundler || {
      >&2 echo ''
      >&2 echo ''
      >&2 echo '--------------- Error -------------'
      >&2 echo 'Problem installing ruby bundler.'
      exit 1
    }

    [[ -n $(which rbenv) ]] && rbenv rehash || ( echo "Problem running rbenv rehash" && exit 1)

  }
fi

if [[ -f "Gemfile" ]]; then
  >&2 echo "==> Installing gem dependencies…"
  which bundle
  bundle check --path vendor/gems >/dev/null 2>&1  || {
    bundle install --path vendor/gems --quiet --without production || exit 1
  }
fi


>&2 echo "==> Installing Node package dependencies"
>&2 echo "Using node: $(node --version)"
>&2 echo "Using npm: $(npm --version)"
npm install || exit 1

>&2 echo "==> Bootstrap succeeded"
