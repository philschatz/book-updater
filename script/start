#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

SINGLE_BOOK_REPO_NAME=${1}

# Check if dependencies are installed
[[ $(which curl) ]] || die "curl was not found. Run ./script/setup"
[[ $(which rbenv) ]] || die "rbenv was not found. Run ./script/setup"
[[ $(rbenv exec bundle exec kramdown --version) ]] || die "kramdown was not found. Run ./script/setup"
[[ $(which jq) ]] || die "jq was not found. Run ./script/setup"
if [[ ! -d "./subrepos/rhaptos.cnxmlutils" ]]; then
  die "subrepos/rhaptos.cnxmlutils was not found. Run ./script/setup"
fi

_say "!!! Remember to use ${c_purple}AUTO_PUSH=true${c_none} environment var to automatically push changes"


# include parse_yaml function
source script/parse_yaml.sh

# read yaml file
eval $(parse_yaml _config.yml "config_")

# access yaml content
# BOOK_COUNT=${#config_books__title[@]}

BOOKS_WITH_ERRORS=()
INDEX=0
for BOOK_TITLE in "${config_books__title[@]}"; do
  REPO_NAME=${config_books__repo[${INDEX}]}
  UUID=${config_books__uuid[${INDEX}]}
  LICENSE=${config_books__license[${INDEX}]}
  # Just making sure we're not crazy
  if [ -n "${BOOK_TITLE}" -a -n "${REPO_NAME}" -a -n "${UUID}" -a -n "${LICENSE}" ]; then

    # If someone passed in the SINGLE_BOOK_REPO_NAME (just generate 1 book)
    # then only generate that one book
    if [[ ! "${SINGLE_BOOK_REPO_NAME}" || "${SINGLE_BOOK_REPO_NAME}" == "${REPO_NAME}" ]]; then
      do_progress_quiet "Generating ${INDEX} ${REPO_NAME}" \
        ./script/do.sh "${REPO_NAME}" "${UUID}" "${BOOK_TITLE}" "${LICENSE}"
      # test $? != 0 && BOOKS_WITH_ERRORS+="${REPO_NAME}"
    fi
  else
    die "Error in _config.yml for book ${INDEX} ${BOOK_TITLE} ${UUID}"
  fi
  INDEX=$[INDEX + 1]
done

_say "Books with errors: ${BOOKS_WITH_ERRORS[@]}"
